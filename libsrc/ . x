[?25l[J[J[J[J[J[J[?2004h[?25h[?1049h[?1h=[?2004h[1;61r[?12h[?12l[27m[23m[29m[m[H[2J[?25l[61;1H"Anchor.cpp" 190L, 5518C
[97m[41mError detected while processing command line:[m
[97m[41mE121: Undefined variable: normal[m
[97m[41mE15: Invalid expression: normal[m
[32mPress ENTER or type command to continue[m[1;1H[4L[1;1H//
//  Anchor.cpp
//  vagabond
//
//  Created by Helen Ginn on 11/09/2017.
//  Copyright (c) 2017 Strubi. All rights reserved.
//

#include "Anchor.h"
#include "Bond.h"
#include "Shouter.h"

Anchor::Anchor(BondPtr inheritToNTerminus, BondPtr inheritToCTerminus)
{[15;9H/* When going from towards-C-tie (>) to towards-N-tie (<):[16;9H*[16C*[17;9H*    --N--CA--C--N--CA--C--N--CA--[18;9H*[14C^   ^[19;9H*    downstream     parent[20;9H*[21;9H* This class must describe *N in a way to prepare the preceding C[22;9H* i.e. start = position of N, old_start is position of CA,[23;9H* basis is CA--N bond reversed, torsion is reversed.[24;9H*/[26;9H_callingBond = NULL;[27;9H_trappedToNTerminus.reset(new Bond(*inheritToNTerminus));[28;9H_trappedToCTerminus.reset(new Bond(*inheritToCTerminus));[30;9H// Either we have bonds C->N and N->CA (to C terminus)[31;9H// or we have CA->N and N->C (to N terminus)[32;9H// We must flip accordingly. First we determine the state.[33;9H_flipNTerminus = (_trappedToCTerminus->getMinor()->getAtomName() == "N");[35;9H// "Bad bond" is the one that needs reversing. "Good bond" is already OK.[36;9HBondPtr badBond = _trappedToCTerminus;[37;9HBondPtr goodBond = _trappedToNTerminus;[39;9H// If it's flipped we want the opposite.[40;9Hif (_flipNTerminus)[41;9H{[42;17HbadBond = _trappedToNTerminus;[43;17HgoodBond = _trappedToCTerminus;[44;9H}[46;9H// Store the position of the new anchor atom (N).[47;9H_anchorStart = goodBond->getAbsolutePosition();[48;9H_majorStart = badBond->getAbsolutePosition();[49;9H// Get position of heavy start before we flip the bond.[51;9H// Perhaps we chose a stupid anchor?[52;9Hif (badBond->downstreamAtomGroupCount() != 1 || badBond->downstreamAtomCount(0) == 0)[53;9H{[54;17Hshout_at_user("Cannot anchor a bond which has no/2+ downstream groups");[55;9H}[57;9H// During reversal of the bad bond, we need to store the info of the[58;9H// next bond downstream prior to reversal.[59;9H_newHeavyStoredGroup = ToBondPtr(badBond->downstreamAtom(0, 0)->getModel())->getBondGroup(0);[61;1H[K[1;1H[?25h


[?25l[61;1HType  :qa!  and press <Enter> to abandon all changes and exit Vim[4;1H[?25h[?25l[61;1H[K[61;1H:[?2004h[?25hw[?25l[?25h[?25l"Anchor.cpp" 190L, 5518C written[4;1H[?25h

[?25l[61;1HType  :qa!  and press <Enter> to abandon all changes and exit Vim[6;1H[?25h[?25l[?25h[?25l[61;1H[K[61;1H:[?2004h[?25hq[?25l[?25h